//#!model			insensitive;
//#!language		"python";

#whitespaces    @whitespace ;

@whitespace     ' \r\n\t'+
                | "#" !'\n'* '\n'
                ;

@IDENT		    'A-Za-z_' 'A-Za-z0-9_'* 							= IDENT;
@STRING 	    '"' ( '\\' . | !'"' )* '"'
				| '\'' ( '\\' . | !'\'' )* '\''						= STRING;
@NUMBER 	    '0-9'+ '.' '0-9'* | '0-9'* '.' '0-9'+ | '0-9'+ 		= NUMBER;

logic$          : expression ;

expression      : test ;

test   	        : if_else
				| or_test
				;

if_else         := or_test "if" or_test "else" test
				;

or_test		    : and_test ( "or" and_test )+ 						= or_test
				| and_test
				;

and_test	    : not_test ( "and" not_test )+ 						= and_test
				| not_test
				;

not_test	    : "not" not_test									= not_test
				| comparison
				;

comparison      : expr (( "==" | ">=" | "<=" | "<" | ">" | "<>" | "!="
								| "in" | "not" "in") expr )+		= comparison
				| expr
				;

expr		    : expr '+' term										= add
				| expr '-' term										= sub
				| term
				;

term		    : term '*' factor									= mul
				| term '/' factor									= div
				| term '%' factor									= mod
				| factor;

factor		    : ( '+' | '-' | '~' ) factor						= factor
				| power
				;

power		    : entity "**" factor								= power
				| entity
				;

entity          : atom trailer+										= entity
				| atom
				;

trailer         : '(' list ')'
				| '[' expression ']'
				| '.' @IDENT
				;

atom		    : ( "True" | "False" )
				| @NUMBER
				| @IDENT
				| @STRING+											= strings
				| comprehension
				| '[' list ']'
				| '(' expression ')'								= atom
				;

comprehension   := '[' expression "for" @IDENT
							"in" expression ( "if" expression )? ']'
				;


list            := expression (',' expression )*
				|
				;
